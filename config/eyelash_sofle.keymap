#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        mm_shift_2: mm_shift_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SHIFT_2";
            #binding-cells = <0>;

            // どちらの Shift でも発動（片方だけにしたいなら MOD_LSFT だけ等に）

            mods = <(MOD_LSFT|MOD_RSFT)>;

            // mods が無いとき → N2、あるとき → DQT

            bindings = <&kp N2>, <&kp DQT>;
        };

        // 通常は "\"、Shift中は "_"（= Shift+Minus）

        mm_shift_bslh: mm_shift_bslh {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SHIFT_BSLH";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;

            // ベースは Backslash、Shift中は Shift+Minus でアンダースコアを送る

            bindings = <&kp BSLH>, <&kp LS(MINUS)>;
        };

        mm_shift_6: mm_shift_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SHIFT_6";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp N2>, <&kp DQT>;
        };

        mm_shift_7: mm_shift_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SHIFT_7";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp N7>, <&kp SQT>;
        };

        mm_shift_8: mm_shift_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SHIFT_8";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp N8>, <&kp LEFT_PARENTHESIS>;
        };

        mm_shift_9: mm_shift_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SHIFT_9";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp N9>, <&kp RIGHT_PARENTHESIS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        shift+2 {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <39 2>;
        };

        shift+2-1 {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <60 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC        &kp N1        &mm_shift_2   &kp N3       &kp N4          &kp N5       &kp UP_ARROW     &mm_shift_6  &mm_shift_7      &mm_shift_8  &mm_shift_9      &kp N0    &kp BACKSPACE
&kp TAB        &kp Q         &kp W         &kp E        &kp R           &kp T        &kp DOWN_ARROW   &kp Y        &kp U            &kp I        &kp O            &kp P     &kp AT
&kp LCTRL      &kp A         &kp S         &kp D        &kp F           &kp G        &kp LEFT_ARROW   &kp H        &kp J            &kp K        &kp L            &kp SEMI  &kp COLON
&kp LSHFT      &kp Z         &kp X         &kp C        &kp V           &kp B        &kp RIGHT_ARROW  &kp N        &kp M            &kp COMMA    &kp DOT          &kp FSLH  &mm_shift_bslh
&kp LG(SPACE)  &kp LEFT_ALT  &kp LEFT_GUI  &lt 1 LANG2  &kp LEFT_SHIFT  &kp SPACE    &kp ENTER        &kp RET      &kp RIGHT_SHIFT  &lt 2 LANG1  &kp RIGHT_SHIFT  &mo 3
            >;

            sensor-bindings = <&inc_dec_kp LS(LG(RIGHT_BRACKET)) LS(LG(LEFT_BRACKET))>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE      &kp F1     &kp F2        &kp F3        &kp F4        &kp F5       &mmv MOVE_UP     &kp F6                 &kp F7             &kp F8           &kp F9            &kp F10       &kp DELETE
&trans         &kp GRAVE  &kp N7        &kp N8        &kp N9        &kp PLUS     &mmv MOVE_DOWN   &kp PLUS               &kp MINUS          &kp EQUAL        &kp CARET         &kp PIPE      &kp GRAVE
&trans         &kp TILDE  &kp NUMBER_4  &kp N5        &kp N6        &kp MINUS    &mmv MOVE_LEFT   &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp LESS_THAN     &kp PLUS      &kp ASTERISK
&trans         &kp N0     &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL    &mmv MOVE_RIGHT  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp GREATER_THAN  &kp QUESTION  &kp UNDERSCORE
&kp LS(LG(T))  &trans     &trans        &trans        &trans        &trans       &mkp LCLK        &trans                 &trans             &trans           &trans            &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6    &kp F7         &kp F8       &kp F11    &kp F12    &trans
&trans         &kp GRAVE     &kp N7        &kp N8        &kp N9        &kp PLUS        &mmv MOVE_DOWN   &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp UNDER  &kp PLUS
&trans         &kp TILDE     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS       &mmv MOVE_LEFT   &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp LBRC   &kp RBRC
&trans         &kp N0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL       &mmv MOVE_RIGHT  &trans    &trans         &trans       &trans     &trans     &trans
&kp LS(LG(T))  &trans        &trans        &trans        &trans        &trans          &mkp LCLK        &trans    &trans         &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans  &bl BL_OFF    &bl BL_ON     &bl BL_CYCLE  &trans        &trans          &trans  &rgb_ug RGB_ON   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &rgb_ug RGB_OFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans           &trans           &trans           &trans           &trans
            >;
        };
    };
};
